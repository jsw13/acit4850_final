/*
Joseph Wong
April 13, 2022
Description
*/
/*

1. Stage called Build that runs the requirements.txt file bring in the required Python package dependencies. It should print the text "Running The Requirements..." before running the requirements.txt file and print the test "Requirements Complete!" afterwards.

2. Stage called Code Quality that runs Python Lint (i.e., pylint-fail-under) on all 3 Python files (note: filenames should NOT be hard-coded). The code must achieve a score of 7 or more to pass this stage (note: you shouldn't need to fix the code to pass this stage).

Stage called Code Quantity that counts and prints to the console the number of lines in each each Python file (3 files - main.py, data.py, report.py ). The Python filenames should not be hard-coded. See hint below on getting the number of lines in each file.
Stage called Run Scripts that runs the main.py script only if the string parameter called TARGET is set to the value "run". It should call the main script three times with the following command line arguments in the python interpreter:
main.py phone text output
main.py tablet csv output
main.py laptop json output
The above runs of the script should display text, csv and json output (respectively) to the console and generate files output.txt, output.csv and output.json
Stage called Zip that creates a zipfile containing all the .py files in the project (3 files - main.py, data.py, report.py). The Python filenames should not be hard-coded. The zipfile should be made into a build artifact (i.e., it is available for download on the main Jenkins job page).
In one of the above stages, output your Student Number and Group Number so that it shows up in the Console Output. You will need this for the screenshot required in the next question.

Hints:

You can use the echo keyword to print text to the console.
For the Code Quantity Stage, you can use the "wc -l" command to get the number of lines in a file. You may want to Google this command or use the Linux man pages.
*/

pipeline {
    agent any

    parameters {
        string(name: 'TARGET', defaultValue: '', description: 'Run Target Scripts')
    }

    stages {
        stage("Build") {
            steps {
                sh 'echo "Running The Requirements..."'
                sh 'pip install -r requirements.txt'
                sh 'echo "Requirements Complete"'
            }
        }
        stage("Code Quality") {
            steps {
                sh 'pylint-fail-under --fail_under 7.0 *.py'
            }
        }
    }
}
